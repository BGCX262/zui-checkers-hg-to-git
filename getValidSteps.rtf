{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf250
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww8560\viewh13400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 bishop & queen\
\
do triedy piece abstractnu getValidSteps()\
\
implementovat pre pesiaka a kralovnu\
\
z agenta zistim atackDir - atack direction\
\
-------------------------\
----- algoritmus -----\
- pamatat si staci iba prvy tah (konkretnu figurku, smer, \'85). Je to ta vetva stromu, v ktorej sa nachadza list s max. skore\
- Pred volanim rekurzie naklonovat mapu a poslat ju ako paramater funkcii, ktora bude mat tvar:\
f() \{\
\'85\
move(->)	// pohyb figurky\
uprava mapy (vymazanie preskocenej figurky...)\
f()		// volanie rekurzie\
move(</)	// inverzny pohyb\
uprava mapy (obnovenie preskocenej figurky...)\
\}\
\
----- uprava Move -----\
- getValidSteps brachia List<move>, pricom jednotlive polozky su uz iba konecne\
- move vidi precedingMove\
- move ma skore (skore predosleho Move + skore tohoto)\
- move vidi figurku, ktoru preskocil\
\
\
------ Agenti -------\
- algoritmy su implementovane v jednotlivych agentoch\
- dorobit zavislosti agentov (Human vidi GUI)\
\
\
------ Cas limit -----\
- volanie act zabezpecuje framework, vole ho v novom threade...}